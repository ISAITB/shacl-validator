validator.uploadTitle=SHACL Validator
validator.label.contentSyntaxLabel=Content syntax
validator.label.contentSyntaxTooltip=Optional for content provided as a file or a URI if a known file extension is detected
validator.label.includeExternalShapes=Include external shapes
validator.label.externalRulesTooltip=Additional shapes that will be considered for the validation
validator.label.externalShapesLabel=External shapes
validator.label.externalShapesPlaceholder=Select file...
validator.label.optionContentQuery=Query
validator.label.reportItemFocusNode=Focus node
validator.label.reportItemResultPath=Result path
validator.label.reportItemShape=Shape
validator.label.reportItemValue=Value
validator.label.loadImportsLabel=Load imports defined in the input?
validator.label.loadImportsTooltip=Load imported resources defined via owl:imports when defining the data graph to validate.
validator.label.mergeModelsLabel=Merge shape and input models?
validator.label.mergeModelsTooltip=Before validation takes place merge the shape model with the input. This is done to extend the input with contextual information that may be present in the shape model, ensuring that all applicable shapes are triggered. You may need to disable this if the report includes findings on merged shapes.
validator.label.queryEndpointInputPlaceholder=SPARQL endpoint URL
validator.label.queryUsernameInputPlaceholder=Username
validator.label.queryPasswordInputPlaceholder=Password
validator.label.queryAuthenticateLabel=Authenticate?

validator.label.exception.validationTypeExpectsLoadImports=Validation type [{0}] expects the choice of whether or not imports are to be loaded ({1}).
validator.label.exception.validationTypeDoesNotExpectLoadImports=Validation type [{0}] does not expect the choice of whether or not imports are to be loaded ({1}).
validator.label.exception.validationTypeExpectsMergeModelsBeforeValidation=Validation type [{0}] expects the choice of whether or not the shape graph should be merged with the input before validation ({1}).
validator.label.exception.validationTypeDoesNotExpectMergeModelsBeforeValidation=Validation type [{0}] does not expect the choice of whether or not the shape graph should be merged with the input before validation ({1}).
validator.label.exception.sparqlQueriesNotSupported=SPARQL queries are not supported.
validator.label.exception.sparqlEndpointNeeded=A SPARQL endpoint is needed to execute the query against.
validator.label.exception.ownSparqlEndpointNotAllowed=You cannot provide your own SPARQL endpoint for the validation.
validator.label.exception.sparqlCredentialsNotAllowed=You are not expected to provide credentials for the SPARQL endpoint.
validator.label.exception.sparqlCredentialsRequired=You must provide your credentials for the SPARQL endpoint.
validator.label.exception.sparqlQueryExpected=You must provide the query for the SPARQL endpoint.
validator.label.exception.sparqlQueryError=An error occurred while querying the SPARQL endpoint: {0}
validator.label.exception.sparqlQueryErrorInContentProcessing=An error occurred while processing the retrieved content.
validator.label.exception.sparqlQueryMustBeConstruct=The input query must be a CONSTRUCT query.
validator.label.exception.sparqlQueryParsingError=An error occurred while parsing the provided SPARQL Query: {0}
validator.label.exception.unableToDetermineShaclContentType=Unable to determine the content type of a SHACL shape file.
validator.label.exception.errorReadingShaclFile=An error occurred while reading a SHACL file.
validator.label.exception.rdfLanguageCouldNotBeDetermined=The RDF language could not be determined for the provided content.
validator.label.exception.errorWhileReadingProvidedContent=An error occurred while reading the provided content: {0}
validator.label.exception.unknownValidationType=Unknown validation type. One of [{0}] is mandatory.
validator.label.exception.unexpectedParameter=Unexpected parameter [{0}]
validator.label.exception.contentExpectedAsInpurOrQuery=The content to validate must either be provided via input or SPARQL query but not both.
validator.label.exception.externalShapeLoadingNotSupported=Loading external shape files is not supported for validation type [{0}] of domain [{1}].
validator.label.exception.reportSyntaxNotSupported=The requested report syntax [{0}] is not supported.
validator.label.exception.externalBase64ShapesNeedAlsoSyntax=External shape files that are provided in BASE64 need to also define their syntax.
validator.label.exception.unexpectedErrorDuringValidation=An error occurred during the validation.
validator.label.exception.unexpectedErrorDuringValidationWithParams=An error occurred during the validation [{0}].
validator.label.exception.unableToGenerateReportDueToContentProblem=An error occurred while generating the SHACL Validation Report due to a problem in the provided content.
validator.label.exception.downloadError=An error occurred while downloading the requested data.
validator.label.exception.preprocessingError=An error occurred while preprocessing the input file with the SPARQL CONSTRUCT query: {0}.
validator.label.exception.emptyPreprocessingResult=Preprocessing returned empty model after executing SPARQL CONSTRUCT query: {0}.

validator.label.downloadShapesButton=Download SHACL shapes
validator.label.downloadInputButton=Download validated content
validator.label.contentSyntaxDefault=Based on the file extension
validator.label.contentSyntaxDefaultForUri=Based on the file extension or response type
validator.label.exception.providedContentSyntaxInvalid=Provided content syntax type is not valid
validator.label.exception.providedValidationTypeInvalid=Provided validation type is not valid